import tkinter as tk
from tkinter import messagebox
from tkinter import filedialog

# Инициализация окна
window = tk.Tk()
window.title("Услуги для клиентов")

# Список услуг для каждой группы
services = {
    "Группа 1": ["Услуга 1.1", "Услуга 1.2", "Услуга 1.3", "Услуга 1.4"],
    "Группа 2": ["Услуга 2.1", "Услуга 2.2", "Услуга 2.3", "Услуга 2.4"],
    "Группа 3": ["Услуга 3.1", "Услуга 3.2", "Услуга 3.3", "Услуга 3.4"]
}

# Общий список услуг для клиента
client_services = []

# Общая сумма услуги
total_cost = 0

# Функция для выбора услуги
def select_service(group, service, checkbox_var):
    global total_cost

    if checkbox_var.get():
        client_services.append(service)
        total_cost += 10  # Замена на свою логику расчета стоимости услуги
    else:
        if service in client_services:
            client_services.remove(service)
            total_cost -= 10  # Замена на свою логику расчета стоимости услуги

# Функция для отображения общего списка услуг для клиента
def show_client_services():
    messagebox.showinfo("Услуги для клиента", "\n".join(client_services))

# Функция для загрузки фотографии клиента
def load_photo():
    filetypes = (("Изображения", "*.jpg *.jpeg *.png"), ("Все файлы", "*.*"))
    filename = filedialog.askopenfilename(filetypes=filetypes)
    if filename:
        messagebox.showinfo("Фотография клиента", f"Выбран файл: {filename}")

# Создание виджетов
group_labels = []
checkbox_vars = []
row_num = 0
for group, group_services in services.items():
    group_label = tk.Label(window, text=group, font=("Arial", 12, "bold"))
    group_label.grid(row=row_num, column=0, sticky="w")
    group_labels.append(group_label)
    row_num += 1

    for i, service in enumerate(group_services):
        checkbox_var = tk.BooleanVar()
        checkbox_var.set(False)
        checkbox_vars.append(checkbox_var)
        checkbox = tk.Checkbutton(window, text=service, variable=checkbox_var, onvalue=True, offvalue=False,
                                 command=lambda g=group, s=service, var=checkbox_var:
                                     select_service(g, s, var))
        checkbox.grid(row=row_num, column=0, sticky="w")
        row_num += 1

total_cost_label = tk.Label(window, text="Общая сумма услуги: $0", font=("Arial", 12, "bold"))
total_cost_label.grid(row=row_num, column=0, sticky="w")

show_services_button = tk.Button(window, text="Показать услуги клиента", command=show_client_services)
show_services_button.grid(row=row_num+1, column=0, pady=10)

load_photo_button = tk.Button(window, text="Загрузить фото клиента", command=load_photo)
load_photo_button.grid(row=row_num+2, column=0, pady=10)

# Обновление общей суммы услуги
def update_total_cost():
    total_cost_label.config(text=f"Общая сумма услуги: ${total_cost}")

    # После каждого изменения услуги обновляем сумму
    window.after(100, update_total_cost)

# Обновляем общую сумму услуги каждые 100 миллисекунд
window.after(100, update_total_cost)

# Запуск основного цикла обработки событий
window.mainloop()
